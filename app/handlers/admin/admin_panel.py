import logging
from aiogram import Router, F
from aiogram.types import Message, CallbackQuery
from aiogram.filters import Command, StateFilter
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import default_state
from sqlalchemy.ext.asyncio import AsyncSession
from sqlalchemy.future import select
from app.database.models import Admin, CurrencyPair, BotSettings
from app.keyboards.admin_kb import (
    get_admin_main_menu
)
from app.config import SUPERADMIN_IDS

logger = logging.getLogger(__name__)

router = Router()

async def process_admin_panel(message: Message, session: AsyncSession):
    user_id = message.from_user.id
    print(user_id)
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ–≤
    query = select(Admin).where(Admin.user_id == user_id)
    result = await session.execute(query) # type: ignore
    admin = result.scalar_one_or_none()
    
    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–¥–º–∏–Ω, –Ω–æ –æ–Ω –≤ —Å–ø–∏—Å–∫–µ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω–æ–≤, –¥–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ
    if admin is None and user_id in SUPERADMIN_IDS:
        admin = Admin(
            user_id=user_id,
            username=message.from_user.username,
            is_superadmin=True,
            is_active=True
        )
        session.add(admin)
        await session.commit()

        await message.answer(
            "üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å! –í—ã –¥–æ–±–∞–≤–ª–µ–Ω—ã –∫–∞–∫ —Å—É–ø–µ—Ä–∞–¥–º–∏–Ω."
        )
    elif admin is None:
        await message.answer('‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏.')
        return 
    elif not admin.is_active:
        await message.answer('‚õî –í–∞—à –∞–∫–∫–∞—É–Ω—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞ –¥–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.')
        return
    else:
        await message.answer('üëã –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å!')

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
    await show_admin_main_menu(message)


@router.message(Command('admin'))
async def cmd_admin(message: Message, session: AsyncSession):
    await process_admin_panel(message, session)

async def show_admin_main_menu(message: Message):
    """–ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    await message.answer(
        'üîß <b>–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º</b>\n\n –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:',
        reply_markup=get_admin_main_menu(),
        parse_mode='HTML'
    )

@router.callback_query(F.data == 'admin_main_menu')
async def cb_admin_main_menu(callback: CallbackQuery):
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏—è –Ω–∞ –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"""
    await callback.message.edit_text(
        'üîß <b>–ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º</b>\n\n –í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª:',
        reply_markup=get_admin_main_menu(),
        parse_mode='HTML'
    )
    await callback.answer()