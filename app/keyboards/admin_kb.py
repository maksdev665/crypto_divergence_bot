from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder
from typing import List, Union, Dict, Optional
from app.database.models import CurrencyPair

def get_admin_main_menu() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –∞–¥–º–∏–Ω-–ø–∞–Ω–µ–ª–∏"""
    kb = InlineKeyboardBuilder()

    kb.button(text='ü§ñ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±–æ—Ç–æ–º', callback_data='bot_control')
    kb.button(text='üìä –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –≤–∞–ª—é—Ç–Ω—ã–º–∏ –ø–∞—Ä–∞–º–∏', callback_data='pairs_management')
    kb.button(text='‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏', callback_data='bot_settings')
    kb.button(text='üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data='show_stats')

    # –†–∞—Å–ø–æ–ª–∞–≥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –≤ —Å—Ç–æ–ª–±–∏–∫
    kb.adjust(1)

    return kb.as_markup()


def get_bot_control_kb(is_active: bool) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –±–æ—Ç–æ–º"""
    kb = InlineKeyboardBuilder()

    if is_active:
        kb.button(text='üî¥ –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞', callback_data='bot_deactivate')
    else:
        kb.button(text='üü¢ –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞', callback_data='bot_activate')
    
    kb.button(text='üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞', callback_data='show_stats')
    kb.button(text='üîô –ù–∞–∑–∞–¥', callback_data='admin_main_menu')

    kb.adjust(1)

    return kb.as_markup()


def get_pairs_menu_kb() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –º–µ–Ω—é —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–∞–ª—é—Ç–Ω—ã–º–∏ –ø–∞—Ä–∞–º–∏"""
    kb = InlineKeyboardBuilder()

    kb.button(text='‚ûï –î–æ–±–∞–≤–∏—Ç—å –≤–∞–ª—é—Ç–Ω—É—é –ø–∞—Ä—É', callback_data='add_pair')
    kb.button(text='üìã –°–ø–∏—Å–æ–∫ –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–∞—Ä', callback_data='list_pairs')
    kb.button(text='üîô –ù–∞–∑–∞–¥', callback_data='admin_main_menu')

    kb.adjust(1)

    return kb.as_markup()


def get_settings_menu_kb() -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –º–µ–Ω—é –Ω–∞—Å—Ç—Ä–æ–µ–∫"""
    kb = InlineKeyboardBuilder()

    kb.button(text='üì¢ ID –≥—Ä—É–ø–ø—ã –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π', callback_data='set_group_id')
    kb.button(text='‚è± –ò–Ω—Ç–µ—Ä–≤–∞–ª –ø—Ä–æ–≤–µ—Ä–∫–∏', callback_data='set_check_interval')
    kb.button(text='üìä –ü–æ—Ä–æ–≥ –¥–∏–≤–µ—Ä–≥–µ–Ω—Ü–∏–∏ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é', callback_data='set_default_threshold')
    kb.button(text='üîô –ù–∞–∑–∞–¥', callback_data='admin_main_menu')

    kb.adjust(1)

    return kb.as_markup()


def get_back_kb(callback_data: str) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–æ–π '–ù–∞–∑–∞–¥'"""
    kb = InlineKeyboardBuilder()
    kb.button(text='üîô –ù–∞–∑–∞–¥', callback_data=callback_data)
    return kb.as_markup()


def get_pairs_list_kb(pairs: List[CurrencyPair]) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å–æ —Å–ø–∏—Å–∫–æ–º –≤–∞–ª—é—Ç–Ω—ã—Ö –ø–∞—Ä"""
    kb = InlineKeyboardBuilder()

    # –°–æ—Ä—Ç–∏—Ä—É–µ–º –ø–∞—Ä—ã: —Å–Ω–∞—á–∞–ª–∞ –∞–∫—Ç–∏–≤–Ω—ã–µ, –ø–æ—Ç–æ–º –Ω–µ–∞–∫—Ç–∏–≤–Ω—ã–µ
    sorted_pairs = sorted(pairs, key=lambda p: (not p.is_active, p.symbol))

    for pair in sorted_pairs:
        status_emoji = 'üü¢' if pair.is_active else 'üî¥'
        kb.button(
            text=f'{status_emoji} {pair.symbol}',
            callback_data=f'pair_{pair.id}'
        )
    
    kb.button(text='üîô –ù–∞–∑–∞–¥', callback_data='pairs_management')

    kb.adjust(1)

    return kb.as_markup()


def get_pair_actions_kb(pair_id: int, is_active: bool) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –¥–µ–π—Å—Ç–≤–∏–π —Å –≤–∞–ª—é—Ç–Ω–æ–π –ø–∞—Ä–æ–π"""
    kb = InlineKeyboardBuilder()

    # –ö–Ω–æ–ø–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏/–¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏
    if is_active:
        kb.button(text='üî¥ –î–µ–∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å', callback_data=f'toggle_pair_{pair_id}')
    else:
        kb.button(text='üü¢ –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å', callback_data=f'toggle_pair_{pair_id}')
    
    kb.button(text='‚úèÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å –ø–æ—Ä–æ–≥ –¥–∏–≤–µ—Ä–≥–µ–Ω—Ü–∏–∏', callback_data=f'edit_threshold_{pair_id}')
    kb.button(text='üóë –£–¥–∞–ª–∏—Ç—å –ø–∞—Ä—É', callbakc_data=f'delete_pair_{pair_id}')
    kb.button(text='üîô –ù–∞–∑–∞–¥', callback_data='list_pair')

    kb.adjust(1)

    return kb.as_markup()


def get_confirm_kb(confirm_callback: str, cancel_callback: str) -> InlineKeyboardMarkup:
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –¥–µ–π—Å—Ç–≤–∏—è"""
    kb = InlineKeyboardBuilder()

    kb.button(text='‚úÖ –î–∞, –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞—é',callback_data=confirm_callback)
    kb.button(text='‚ùå –û—Ç–º–µ–Ω–∞', callback_data=cancel_callback)

    kb.adjust(1)

    return kb.as_markup()

